use std::sync::Arc;

use gpui::{FontStyle, FontWeight, HighlightStyle, Hsla, WindowBackgroundAppearance};

use crate::{
    AccentColors, Appearance, PlayerColors, StatusColors, StatusColorsRefinement, SyntaxTheme,
    SystemColors, Theme, ThemeColors, ThemeFamily, ThemeStyles, default_color_scales,
};

/// The fallback theme family for Zed.
///
/// This is used to construct the default theme fallback values, as well as to
/// have a theme available at compile time for tests.
pub fn zed_fallback_themes() -> ThemeFamily {
    ThemeFamily {
        id: "zed-fallback".to_string(),
        name: "Zed Fallback".into(),
        author: "".into(),
        themes: vec![zed_fallback_theme()],
        scales: default_color_scales(),
    }
}

// If a theme customizes a foreground version of a status color, but does not
// customize the background color, then use a partly-transparent version of the
// foreground color for the background color.
pub(crate) fn apply_status_color_defaults(status: &mut StatusColorsRefinement) {
    for (fg_color, bg_color) in [
        (&status.deleted, &mut status.deleted_background),
        (&status.created, &mut status.created_background),
        (&status.modified, &mut status.modified_background),
        (&status.conflict, &mut status.conflict_background),
        (&status.error, &mut status.error_background),
        (&status.hidden, &mut status.hidden_background),
    ] {
        if bg_color.is_none() {
            if let Some(fg_color) = fg_color {
                *bg_color = Some(fg_color.opacity(0.25));
            }
        }
    }
}

pub(crate) fn zed_fallback_theme() -> Theme {
    let magenta: Hsla = gpui::rgb(0xff00ff).into();

    Theme {
        id: "one_dark".to_string(),
        // We use "One Dark" as the theme name here so that when we load the real One Dark it will override this one.
        name: "One Dark".into(),
        appearance: Appearance::Dark,
        styles: ThemeStyles {
            window_background_appearance: WindowBackgroundAppearance::Opaque,
            system: SystemColors::default(),
            accents: AccentColors(vec![magenta]),
            colors: ThemeColors {
                border: magenta,
                border_variant: magenta,
                border_focused: magenta,
                border_selected: magenta,
                border_transparent: SystemColors::default().transparent,
                border_disabled: magenta,
                elevated_surface_background: magenta,
                surface_background: magenta,
                background: magenta,
                element_background: magenta,
                element_hover: magenta,
                element_active: magenta,
                element_selected: magenta,
                element_disabled: SystemColors::default().transparent,
                drop_target_background: magenta,
                ghost_element_background: SystemColors::default().transparent,
                ghost_element_hover: magenta,
                ghost_element_active: magenta,
                ghost_element_selected: magenta,
                ghost_element_disabled: SystemColors::default().transparent,
                text: magenta,
                text_muted: magenta,
                text_placeholder: magenta,
                text_disabled: magenta,
                text_accent: magenta,
                icon: magenta,
                icon_muted: magenta,
                icon_disabled: magenta,
                icon_placeholder: magenta,
                icon_accent: magenta,
                debugger_accent: magenta,
                status_bar_background: magenta,
                title_bar_background: magenta,
                title_bar_inactive_background: magenta,
                toolbar_background: magenta,
                tab_bar_background: magenta,
                tab_inactive_background: magenta,
                tab_active_background: magenta,
                search_match_background: magenta,
                editor_background: magenta,
                editor_gutter_background: magenta,
                editor_subheader_background: magenta,
                editor_active_line_background: magenta,
                editor_highlighted_line_background: magenta,
                editor_debugger_active_line_background: magenta,
                editor_line_number: magenta,
                editor_active_line_number: magenta,
                editor_hover_line_number: magenta,
                editor_invisible: magenta,
                editor_wrap_guide: magenta,
                editor_active_wrap_guide: magenta,
                editor_indent_guide: magenta,
                editor_indent_guide_active: magenta,
                editor_document_highlight_read_background: magenta,
                editor_document_highlight_write_background: magenta,
                editor_document_highlight_bracket_background: magenta,
                terminal_background: magenta,
                terminal_ansi_background: magenta,
                terminal_foreground: magenta,
                terminal_bright_foreground: magenta,
                terminal_dim_foreground: magenta,
                terminal_ansi_black: magenta,
                terminal_ansi_red: magenta,
                terminal_ansi_green: magenta,
                terminal_ansi_yellow: magenta,
                terminal_ansi_blue: magenta,
                terminal_ansi_magenta: magenta,
                terminal_ansi_cyan: magenta,
                terminal_ansi_white: magenta,
                terminal_ansi_bright_black: magenta,
                terminal_ansi_bright_red: magenta,
                terminal_ansi_bright_green: magenta,
                terminal_ansi_bright_yellow: magenta,
                terminal_ansi_bright_blue: magenta,
                terminal_ansi_bright_magenta: magenta,
                terminal_ansi_bright_cyan: magenta,
                terminal_ansi_bright_white: magenta,
                terminal_ansi_dim_black: magenta,
                terminal_ansi_dim_red: magenta,
                terminal_ansi_dim_green: magenta,
                terminal_ansi_dim_yellow: magenta,
                terminal_ansi_dim_blue: magenta,
                terminal_ansi_dim_magenta: magenta,
                terminal_ansi_dim_cyan: magenta,
                terminal_ansi_dim_white: magenta,
                panel_background: magenta,
                panel_focused_border: magenta,
                panel_indent_guide: magenta,
                panel_indent_guide_hover: magenta,
                panel_indent_guide_active: magenta,
                pane_focused_border: magenta,
                pane_group_border: magenta,
                scrollbar_thumb_background: gpui::transparent_black(),
                scrollbar_thumb_hover_background: magenta,
                scrollbar_thumb_active_background: magenta,
                scrollbar_thumb_border: magenta,
                scrollbar_track_background: gpui::transparent_black(),
                scrollbar_track_border: magenta,
                editor_foreground: magenta,
                link_text_hover: magenta,
                version_control_added: magenta,
                version_control_deleted: magenta,
                version_control_modified: magenta,
                version_control_renamed: magenta,
                version_control_conflict: magenta,
                version_control_ignored: magenta,
                version_control_conflict_ours_background: magenta,
                version_control_conflict_theirs_background: magenta,
                version_control_conflict_ours_marker_background: magenta,
                version_control_conflict_theirs_marker_background: magenta,
                version_control_conflict_divider_background: magenta,
            },
            status: StatusColors {
                conflict: magenta,
                conflict_background: magenta,
                conflict_border: magenta,
                created: magenta,
                created_background: magenta,
                created_border: magenta,
                deleted: magenta,
                deleted_background: magenta,
                deleted_border: magenta,
                error: magenta,
                error_background: magenta,
                error_border: magenta,
                hidden: magenta,
                hidden_background: magenta,
                hidden_border: magenta,
                hint: magenta,
                hint_background: magenta,
                hint_border: magenta,
                ignored: magenta,
                ignored_background: magenta,
                ignored_border: magenta,
                info: magenta,
                info_background: magenta,
                info_border: magenta,
                modified: magenta,
                modified_background: magenta,
                modified_border: magenta,
                predictive: magenta,
                predictive_background: magenta,
                predictive_border: magenta,
                renamed: magenta,
                renamed_background: magenta,
                renamed_border: magenta,
                success: magenta,
                success_background: magenta,
                success_border: magenta,
                unreachable: magenta,
                unreachable_background: magenta,
                unreachable_border: magenta,
                warning: magenta,
                warning_background: magenta,
                warning_border: magenta,
            },
            player: PlayerColors::dark(),
            syntax: Arc::new(SyntaxTheme {
                highlights: vec![
                    ("attribute".into(), magenta.into()),
                    ("boolean".into(), magenta.into()),
                    ("comment".into(), magenta.into()),
                    ("comment.doc".into(), magenta.into()),
                    ("constant".into(), magenta.into()),
                    ("constructor".into(), magenta.into()),
                    ("embedded".into(), HighlightStyle::default()),
                    (
                        "emphasis".into(),
                        HighlightStyle {
                            font_style: Some(FontStyle::Italic),
                            ..HighlightStyle::default()
                        },
                    ),
                    (
                        "emphasis.strong".into(),
                        HighlightStyle {
                            font_weight: Some(FontWeight::BOLD),
                            ..HighlightStyle::default()
                        },
                    ),
                    ("enum".into(), HighlightStyle::default()),
                    ("function".into(), magenta.into()),
                    ("function.method".into(), magenta.into()),
                    ("function.definition".into(), magenta.into()),
                    ("hint".into(), magenta.into()),
                    ("keyword".into(), magenta.into()),
                    ("label".into(), HighlightStyle::default()),
                    ("link_text".into(), magenta.into()),
                    (
                        "link_uri".into(),
                        HighlightStyle {
                            color: Some(magenta),
                            font_style: Some(FontStyle::Italic),
                            ..HighlightStyle::default()
                        },
                    ),
                    ("number".into(), magenta.into()),
                    ("operator".into(), HighlightStyle::default()),
                    ("predictive".into(), HighlightStyle::default()),
                    ("preproc".into(), HighlightStyle::default()),
                    ("primary".into(), HighlightStyle::default()),
                    ("property".into(), magenta.into()),
                    ("punctuation".into(), HighlightStyle::default()),
                    ("punctuation.bracket".into(), HighlightStyle::default()),
                    ("punctuation.delimiter".into(), HighlightStyle::default()),
                    ("punctuation.list_marker".into(), HighlightStyle::default()),
                    ("punctuation.special".into(), HighlightStyle::default()),
                    ("string".into(), magenta.into()),
                    ("string.escape".into(), HighlightStyle::default()),
                    ("string.regex".into(), magenta.into()),
                    ("string.special".into(), HighlightStyle::default()),
                    ("string.special.symbol".into(), HighlightStyle::default()),
                    ("tag".into(), HighlightStyle::default()),
                    ("text.literal".into(), HighlightStyle::default()),
                    ("title".into(), HighlightStyle::default()),
                    ("type".into(), magenta.into()),
                    ("variable".into(), HighlightStyle::default()),
                    ("variable.special".into(), magenta.into()),
                    ("variant".into(), HighlightStyle::default()),
                ],
            }),
        },
    }
}
